{"version":3,"sources":["item_manager.jsx","schedule.jsx","app_frame.jsx","simulation_result.jsx","simulation.jsx","index.js"],"names":["ProcessTable","props","TableContainer","component","Paper","Table","aria-label","TableHead","header_row","TableBody","body_rows","TableTemplate","TableRow","cols","map","col","TableCell","ja_name","rows","row","key","name","scope","NewProcessDialog","React","useState","open","setOpen","handleClose","Dialog","onClose","aria-labelledby","DialogTitle","id","button_text","DialogContent","DialogContentText","text_fields","DialogActions","Button","onClick","handleSubmit","color","variant","ItemManager","init_rows","state","title","process_name","textField","TextField","autoFocus","label","inputRef","el","fullWidth","new_row","this","forEach","value","setState","concat","ret","add_process","Component","ScheduleManager","classes","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","schedule","processes","process_confs","call_back","steps","step","process","process_id","process_conf","process_conf_id","schedule_name","selectField","InputLabel","Select","Object","keys","MenuItem","schedule_id","add_step","SchedulesManager","schedules","1","2","3","4","5","6","7","8","length","console","log","new_schedule","values","new_step","addSchedule","s","useStyles","root","display","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","menuButton","marginRight","toolbar","mixins","drawerPaper","content","flexGrow","padding","AppFrame","container","useTheme","mobileOpen","setMobileOpen","handleDrawerToggle","className","Divider","List","ListItem","href","ListItemIcon","ListItemText","primary","button","AppBar","position","Toolbar","IconButton","edge","Typography","noWrap","Hidden","smUp","implementation","Drawer","anchor","direction","paper","ModalProps","keepMounted","xsDown","Grid","item","xs","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","SimpleExpansionPanel","process_histories","process_history","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","SimulationManager","item_name","selectedDate","show_result","show_circular","history_cols","action","time","start_time","finish_time","itemField","lengthField","milliseconds","Promise","resolve","setTimeout","then","show_result_func","waitSec","callbackFunc","spanedSec","setInterval","clearInterval","add_schedule","utils","DateFnsUtils","TimePicker","showTodayButton","todayLabel","minutesStep","onChange","change","run","CircularProgress","createMuiTheme","palette","ProcessPage","ProcessConfigPage","bath_time","baking_time","SchedulePage","SimulationPage","App","basename","window","location","pathname","path","exact","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.f080f11e.chunk.js","sourcesContent":["import React from 'react';\nimport './index.css';\nimport Button from '@material-ui/core/Button';\n\n// table\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\n\n// Dialog\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n\nfunction TableTemplate(props){\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          {props.header_row}\n        </TableHead>\n        <TableBody>\n          {props.body_rows}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport function ProcessTable(props){\n  let header_row = (\n    <TableRow>\n      {props.cols.map((col) => (\n          <TableCell>\n            {col.ja_name}\n          </TableCell>  \n      ))}\n    </TableRow>\n  );\n\n  let body_rows = (\n    props.rows.map((row) => (\n      <TableRow key={row.name}>\n        {props.cols.map((col) => (\n          <TableCell component=\"th\" scope=\"row\">\n            {row[col.name]}\n          </TableCell>  \n        ))}\n      </TableRow>\n    ))\n  );\n\n  return TableTemplate({header_row, body_rows});\n}\n\nexport function NewProcessDialog(props){\n  \n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSubmit = () => {\n    props.handleSubmit();\n    handleClose();\n  };\n\n  return (\n    <div>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">{props.button_text}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            情報を入力してください。\n          </DialogContentText>\n          {props.text_fields}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleSubmit} color=\"primary\">\n            追加\n          </Button>\n          <Button onClick={handleClose} color=\"secondary\">\n            キャンセル\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <Button onClick={handleClickOpen} color=\"primary\" variant=\"contained\">\n        {props.button_text}\n      </Button>\n      </div>\n  );\n}\n\n\nexport default class ItemManager extends React.Component {\n  \n    constructor(props){\n      super(props);\n\n      this.cols = props.cols;\n\n      let init_rows = [];\n      if(props.rows){\n        init_rows = props.rows;\n      }\n      \n      this.state = {\n        rows: init_rows\n      }\n\n      this.title = props.title;\n      this.button_text = props.button_text;\n  \n      this.process_name = props.name;\n\n      this.textField = {}\n  \n      this.text_fields = (\n        this.cols.map(col => (\n            <TextField\n            autoFocus\n            label={col.ja_name}\n            inputRef={el => this.textField[col.name] = el}\n            fullWidth\n            />\n        ))\n      );\n    }\n  \n    add_process(){\n      let new_row = {}\n      this.cols.forEach(col => {\n        new_row[col.name] = this.textField[col.name].value;\n      });\n      this.setState(state => ({\n        rows: state.rows.concat(new_row),\n      }));\n    }\n  \n    render() {\n      return(\n        <div>\n          <h3>{this.title}</h3>\n          <NewProcessDialog\n            handleSubmit={(ret) => this.add_process(ret)}\n            text_fields={this.text_fields}\n            button_text={this.button_text}\n          />\n          <ProcessTable rows={this.state.rows} cols={this.cols} />\n        </div>\n      );\n    }\n}\n\n\n","import React from 'react';\nimport './index.css';\nimport Button from '@material-ui/core/Button';\n\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nimport {NewProcessDialog, ProcessTable} from './item_manager.jsx';\n\n\n\nclass ScheduleManager extends React.Component {\n  \n    constructor(props){\n        super(props);\n        \n        this.classes = makeStyles((theme) => ({\n            formControl: {\n                margin: theme.spacing(1),\n                minWidth: 120,\n            },\n            selectEmpty: {\n                marginTop: theme.spacing(2),\n            },\n        }));\n\n        this.schedule = props.schedule;\n        this.processes = props.processes;\n        this.process_confs = props.process_confs;\n        this.call_back = props.call_back;\n        this.state = {\n            rows: this.schedule.steps.map(step =>(\n                {  \n                    process: this.processes[step.process_id].name,\n                    process_conf: this.process_confs[step.process_conf_id].name\n                }\n            ))\n        }\n    \n        this.schedule_name = this.schedule.name;\n\n        this.selectField = {}\n        \n        this.cols = [\n            {name: \"process\", ja_name: \"プロセス\"},\n            {name: \"process_conf\", ja_name: \"プロセス設定\"}\n        ];\n\n        this.selectField = {};\n\n        this.text_fields = (\n            <div>\n                <InputLabel>プロセス</InputLabel>\n                <Select\n                inputRef={el => this.selectField[\"process\"] = el}\n                fullWidth\n                >\n                    {Object.keys(this.processes).map( key =>\n                        <MenuItem value={key}>{this.processes[key].name}</MenuItem>\n                    )}\n                </Select>\n                <br/><br/>\n                <InputLabel>プロセス設定</InputLabel>\n                <Select\n                inputRef={el => this.selectField[\"process_conf\"] = el}\n                fullWidth\n                >\n                    {Object.keys(this.process_confs).map( key =>\n                        <MenuItem value={key}>{this.process_confs[key].name}</MenuItem>\n                    )}\n                </Select>\n            </div>\n        );\n    }\n  \n    add_step(){\n        let process_id = this.selectField[\"process\"].value;\n        let process_conf_id = this.selectField[\"process_conf\"].value;\n        let new_row = {\n            process: this.processes[process_id].name,\n            process_conf: this.process_confs[process_conf_id].name\n        }\n        let schedule_id = this.schedule.id;\n        this.call_back({schedule_id, process_id, process_conf_id});\n        this.setState(state => ({\n            rows: state.rows.concat(new_row),\n        }));\n    }\n  \n    render() {\n      return(\n        <div>\n          <h3>{this.schedule_name}</h3>\n          <NewProcessDialog\n            handleSubmit={(ret) => this.add_step()}\n            text_fields={this.text_fields}\n            button_text={this.schedule_name + \"に新規ステップを追加\"}\n          />\n          <ProcessTable rows={this.state.rows} cols={this.cols} />\n        </div>\n      );\n    }\n}\n\nexport default class SchedulesManager extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.name=\"a\";\n        this.state = {\n            schedules: {\n                1:\n                    {\n                        id: 1,\n                        name: \"品番01420-40710用工程\",\n                        steps: [\n                            {process_id: 1, process_conf_id: 4},\n                            {process_id: 3, process_conf_id: 6}\n                        ]\n                    },\n                2:\n                    {\n                        id: 2,\n                        name: \"品番060027-0031用工程\",\n                        steps: [\n                            {process_id: 1, process_conf_id: 1},\n                            {process_id: 2, process_conf_id: 5}\n                        ]\n                    },\n                3:\n                    {\n                        id: 3,\n                        name: \"品番GN642-00600-H用工程\",\n                        steps: [\n                            {process_id: 1, process_conf_id: 1},\n                            {process_id: 2, process_conf_id: 5}\n                        ]\n                    }\n            },\n            processes: {\n                1: {name: \"メッキ\"},\n                2: {name: \"オーブン1\"},\n                3: {name: \"オーブン2\"}\n            },\n            process_confs: {\n                1: {name: \"メッキ120秒\"},\n                2: {name: \"メッキ140秒\"},\n                3: {name: \"メッキ150秒\"},\n                4: {name: \"メッキ180秒\"},\n                5: {name: \"スケジュール=1, 120分\"},\n                6: {name: \"スケジュール=1, 180分\"},\n                7: {name: \"スケジュール=2, 120分\"},\n                8: {name: \"スケジュール=2, 180分\"}\n            }\n        }\n\n        // for testing\n        this.schedule_id = this.state.schedules.length;\n\n        this.text_fields = (\n            <TextField\n            autoFocus\n            label=\"工程名\"\n            inputRef={el => this.textField = el}\n            fullWidth\n            />\n        );\n    }\n\n    addSchedule(){\n        console.log(this.textField.value);\n        let schedule_id = this.schedule_id + 1;\n        let new_schedule = {\n            id: schedule_id,\n            name: this.textField.value,\n            steps: []\n        }\n        this.setState(state => {\n            state.schedules[schedule_id] = new_schedule;\n            return state;\n        })\n    }\n\n    add_step(values){\n        let schedule_id = values.schedule_id;\n        let process_id = values.process_id;\n        let process_conf_id = values.process_conf_id;\n\n        this.setState(state => {\n            let new_step = {process_id, process_conf_id};\n            state.schedules[schedule_id].steps = state.schedules[schedule_id].steps.concat(new_step);\n            return state;\n        })\n    }\n\n    render(){\n        return(\n            <div>\n                <h2>加工工程管理</h2>\n                <NewProcessDialog\n                    handleSubmit={() => this.addSchedule()}\n                    text_fields={this.text_fields}\n                    button_text=\"新規工程を追加\"\n                />\n                {Object.keys(this.state.schedules).map( schedule_id => {\n                    let s = this.state.schedules[schedule_id];\n                    return(<ScheduleManager\n                        schedule={s}\n                        processes={this.state.processes}\n                        process_confs={this.state.process_confs}\n                        call_back={(values) => this.add_step(values)}\n                    />)\n                })}\n            </div>\n        );\n    }\n}","import React from 'react';\n\n// Grid\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\n\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function AppFrame(props){\n\n    const { container } = props;\n    const classes = useStyles();\n    const theme = useTheme();\n    const [mobileOpen, setMobileOpen] = React.useState(false);\n  \n    const handleDrawerToggle = () => {\n      setMobileOpen(!mobileOpen);\n    };\n  \n    const drawer = (\n      <div>\n        <div className={classes.toolbar} />\n        <Divider />\n        <List>\n        <ListItem component=\"a\" href=\"simulation.html\">\n            <ListItemIcon><PlayCircleOutlineIcon /></ListItemIcon>\n            <ListItemText primary=\"シミュレーション\" />\n          </ListItem>\n          <ListItem component=\"a\" href=\"schedule.html\">\n            <ListItemIcon><AccessTimeIcon /></ListItemIcon>\n            <ListItemText primary=\"加工工程管理\" />\n          </ListItem>\n          <ListItem component=\"a\" href=\"process.html\">\n            <ListItemIcon><InboxIcon /></ListItemIcon>\n            <ListItemText primary=\"マシン管理\" />\n          </ListItem>\n          <ListItem component=\"a\" href=\"process_config.html\">\n            <ListItemIcon><SettingsIcon /></ListItemIcon>\n            <ListItemText primary=\"マシン設定管理\" />\n          </ListItem>\n          \n        </List>\n        <Divider />\n        <List>\n          <ListItem button key=\"inquiry\">\n            <ListItemIcon><MailIcon /></ListItemIcon>\n            <ListItemText primary=\"お問い合わせ\" />\n          </ListItem>\n        </List>\n      </div>\n    );\n    \n    return(\n      <div>\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            生産プロセスシミュレータ IZAWA\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n          {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n          <Hidden smUp implementation=\"css\">\n            <Drawer\n              container={container}\n              variant=\"temporary\"\n              anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n              open={mobileOpen}\n              onClose={handleDrawerToggle}\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              ModalProps={{\n                keepMounted: true, // Better open performance on mobile.\n              }}\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n          <Hidden xsDown implementation=\"css\">\n            <Drawer\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              variant=\"permanent\"\n              open\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n        </nav>\n      <main>\n      <Grid container spacing={2}>\n      <Grid item xs={3}>\n      </Grid>\n      <Grid item xs={9}>\n        {props.content}\n      </Grid>\n    </Grid>\n    </main>\n    </div>\n    );\n  }","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {NewProcessDialog, ProcessTable} from './item_manager.jsx';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\nexport default function SimpleExpansionPanel(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <h3>シミュレーション実行結果</h3>\n      <p>全ての工程が終わる時刻: 18:10</p>\n      <h4>プロセスごとの結果</h4>\n      \n        {props.process_histories.map(process_history =>\n            <ExpansionPanel>\n            <ExpansionPanelSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1a-content\"\n                id=\"panel1a-header\"\n                >\n                <Typography className={classes.heading}>{process_history.name}の実行履歴</Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n                <ProcessTable rows={process_history.rows} cols={process_history.cols} />\n            </ExpansionPanelDetails>\n            </ExpansionPanel>\n        )}\n        \n    </div>\n  );\n}","import React from 'react';\nimport './index.css';\nimport Button from '@material-ui/core/Button';\n\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport { TimePicker, KeyboardTimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from '@date-io/date-fns';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport {NewProcessDialog, ProcessTable} from './item_manager.jsx';\nimport SimpleExpansionPanel from './simulation_result.jsx';\n\n\nexport default class SimulationManager extends React.Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            rows: [\n                {item_name: \"品番01420-40710\", schedule_id: 1, length: 13},\n                {item_name: \"品番060027-0031\", schedule_id: 2, length: 3},\n                {item_name: \"品番GN642-00600-H\", schedule_id: 3, length: 24}\n            ],\n            selectedDate: \"2020 4/20 07:30:00\",\n            show_result: false,\n            show_circular: false\n        }\n\n        this.cols = [\n            {name: \"item_name\", ja_name: \"アイテム名\"},\n            {name: \"schedule_id\", ja_name: \"工程\"},\n            {name: \"length\", ja_name: \"バレル数\"}\n        ]\n        \n        this.schedules = {\n            1: {name: \"品番01420-40710用工程\"},\n            2: {name: \"品番060027-0031用工程\"},\n            3: {name: \"品番GN642-00600-H用工程\"}\n        };\n\n        this.history_cols = [\n            {name: \"item_name\", ja_name: \"アイテム名\"},\n            {name: \"action\", ja_name: \"アクション\"},\n            {name: \"time\", ja_name: \"時刻\"}\n        ];\n        this.process_histories = [\n            {\n                name: \"メッキ1\",\n                rows: [\n                    {item_name: \"品番01420-40710_0\", action: \"開始\", time: \"AM07:30\"},\n                    {item_name: \"品番01420-40710_1\", action: \"開始\", time: \"AM07:31\"},\n                    {item_name: \"品番01420-40710_2\", action: \"開始\", time: \"AM07:32\"},\n                    {item_name: \"品番060027-0031_0\", action: \"開始\", time: \"AM07:33\"},\n                    {item_name: \"品番060027-0031_1\", action: \"開始\", time: \"AM07:34\"},\n                    {item_name: \"品番060027-0031_2\", action: \"開始\", time: \"AM07:35\"},\n                    {item_name: \"品番GN642-00600-H_0\", action: \"開始\", time: \"AM07:36\"},\n                    {item_name: \"品番GN642-00600-H_1\", action: \"開始\", time: \"AM07:37\"},\n                    {item_name: \"品番GN642-00600-H_2\", action: \"開始\", time: \"AM07:38\"}\n                ],\n                cols: [\n                    {name: \"item_name\", ja_name: \"アイテム名\"},\n                    {name: \"action\", ja_name: \"アクション\"},\n                    {name: \"time\", ja_name: \"時刻\"}\n                ]\n            },\n            {\n                name: \"オーブン1\",\n                rows: [\n                    {schedule_id: \"1\", start_time: \"AM11:30\", finish_time: \"PM03:30\"},\n                    {schedule_id: \"2\", start_time: \"PM04:30\", finish_time: \"PM05:30\"}\n                ],\n                cols: [\n                    {name: \"schedule_id\", ja_name: \"スケジュールid\"},\n                    {name: \"start_time\", ja_name: \"開始時刻\"},\n                    {name: \"finish_time\", ja_name: \"終了時刻\"}\n                ]\n            },\n            {\n                name: \"オーブン2\",\n                rows: [\n                    {schedule_id: \"1\", start_time: \"AM10:30\", finish_time: \"PM02:30\"}\n                ],\n                cols: [\n                    {name: \"schedule_id\", ja_name: \"スケジュールid\"},\n                    {name: \"start_time\", ja_name: \"開始時刻\"},\n                    {name: \"finish_time\", ja_name: \"終了時刻\"}\n                ]\n            }\n        ]\n\n\n        this.text_fields = (\n            <div>\n                <TextField\n                autoFocus\n                label=\"アイテム名\"\n                inputRef={el => this.itemField = el}\n                fullWidth\n                />\n                <br/><br/>\n                <InputLabel>作業工程</InputLabel>\n                <Select\n                inputRef={el => this.selectField = el}\n                label=\"作業工程\"\n                fullWidth\n                >\n                    {Object.keys(this.schedules).map( key =>\n                        <MenuItem value={key}>{this.schedules[key].name}</MenuItem>\n                    )}\n                </Select>\n                <br/><br/>\n                <TextField\n                autoFocus\n                label=\"バレル数\"\n                inputRef={el => this.lengthField = el}\n                fullWidth\n                />\n            </div>\n        );\n    }\n\n    add_schedule(){\n        this.setState({\n            rows: this.state.rows.concat({\n                        schedule_id: this.selectField.value,\n                        length: this.lengthField.value,\n                        item_name: this.itemField.value\n                    })\n            });\n    }\n\n    change(time){\n        console.log(time);\n        this.setState({\n            selectedDate: time\n        });\n    }\n\n    run(){\n        this.setState({\n            show_result: false,\n            show_circular: true\n        });\n        \n        const sleep = (milliseconds) => {\n            return new Promise(resolve => setTimeout(resolve, milliseconds))\n        } \n        sleep(1000).then(() => {\n            //do stuff\n            this.show_result_func();\n        })\n    }\n\n    show_result_func(){\n        this.setState({\n            show_result: true,\n            show_circular: false\n        });\n    }\n\n    sleep(waitSec, callbackFunc) {\n \n        // 経過時間（秒）\n        var spanedSec = 0;\n     \n        // 1秒間隔で無名関数を実行\n        var id = setInterval(function () {\n     \n            spanedSec++;\n     \n            // 経過時間 >= 待機時間の場合、待機終了。\n            if (spanedSec >= waitSec) {\n     \n                // タイマー停止\n                clearInterval(id);\n     \n                // 完了時、コールバック関数を実行\n                if (callbackFunc) callbackFunc();\n            }\n        }, 1000);\n    }\n    \n\n    render(){\n        return(\n            <div>\n                <Grid container spacing={3}>\n                    <Grid item xs={12}>\n                    <h3>投入アイテムの登録</h3>\n                    <p>実際に工場で処理をするアイテムを処理を行う順序で登録します。\n                        登録するときに、アイテムに対してどのような加工を行うのかを作業工程によって指定します。\n                        今後、機能拡張により、アイテムの投入順序も編集できるようにする予定です。\n                    </p>\n                    <NewProcessDialog\n                        handleSubmit={(ret) => this.add_schedule()}\n                        text_fields={this.text_fields}\n                        button_text=\"アイテムを登録\"\n                    />\n                    <ProcessTable rows={this.state.rows} cols={this.cols} />\n                    </Grid>\n                    <Grid item xs={12}>\n                    <h3>シミュレーション実行</h3>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <TimePicker\n                        showTodayButton\n                        todayLabel=\"now\"\n                        label=\"開始時間\"\n                        value={this.state.selectedDate}\n                        minutesStep={1}\n                        onChange={(time)=>this.change(time)}\n                    />\n                    </MuiPickersUtilsProvider>\n                    <Button color=\"primary\" variant=\"contained\" onClick={() => this.run()}>実行</Button>\n                    </Grid>\n                    <Grid item xs={12}>\n                    {this.state.show_circular &&\n                        <CircularProgress />\n                    }\n                    {this.state.show_result &&\n                        <SimpleExpansionPanel process_histories={this.process_histories} cols={this.history_cols}/>\n                    }\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { render } from 'react-snapshot';\n\n// BrowserRouter\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport ItemManager from './item_manager.jsx';\nimport SchedulesManager from './schedule.jsx';\nimport AppFrame from './app_frame.jsx';\nimport SimulationManager from './simulation.jsx';\n\n\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    //primary: blue,\n  },\n});\n\n\n\nfunction ProcessPage(){\n  \n  /*let stock_cols = [\n      {name: \"name\", ja_name: \"名前\"}\n  ]\n  \n  let endpoint_cols = [\n      {name: \"name\", ja_name: \"名前\"}\n  ]*/\n\n  let plating_cols = [\n      {name: \"name\", ja_name: \"名前\"},\n      {name: \"length\", ja_name: \"メッキ曹の数\"},\n      {name: \"time\", ja_name: \"利用可能時刻\"}\n  ]\n\n  let oven_cols = [\n      {name: \"name\", ja_name: \"名前\"},\n      {name: \"time\", ja_name: \"利用可能時刻\"}\n  ]\n\n  let init_plating_rows = [\n    {name: \"メッキ曹1\", length: 34, time: \"07:30\"}\n  ];\n\n  let init_oven_rows = [\n    {name: \"オーブン1\", time: \"07:30\"},\n    {name: \"オーブン2\", time: \"07:30\"}\n  ];\n\n  return (\n    <div>\n      <ItemManager name=\"plating\" rows={init_plating_rows} title=\"メッキ曹一覧\" button_text=\"メッキ曹を新規登録\" cols={plating_cols} />\n      <ItemManager name=\"oven\" rows={init_oven_rows} title=\"オーブン一覧\" button_text=\"オーブンを新規登録\" cols={oven_cols} />\n    </div>\n  );\n}\n\nfunction ProcessConfigPage(){\n  \n  let plating_conf_cols = [\n      {name: \"bath_time\", ja_name: \"メッキ時間(秒)\"}\n  ]\n  \n  let oven_conf_cols = [\n      {name: \"schedule_id\", ja_name: \"スケジュールid\"},\n      {name: \"baking_time\", ja_name: \"ベーキング時間(分)\"}\n  ]\n\n  let init_plating_rows = [\n    {bath_time: 120},\n    {bath_time: 140},\n    {bath_time: 150},\n    {bath_time: 180}\n  ];\n\n  let init_oven_rows = [\n    {schedule_id: 1, baking_time: 180},\n    {schedule_id: 1, baking_time: 120},\n    {schedule_id: 2, baking_time: 120},\n    {schedule_id: 2, baking_time: 180}\n  ];\n\n  return (\n    <div>\n      <ItemManager name=\"plating_conf\" rows={init_plating_rows} title=\"メッキ曹の設定一覧\" button_text=\"メッキ曹の設定を追加\" cols={plating_conf_cols} />\n      <ItemManager name=\"oven_conf\" rows={init_oven_rows} title=\"オーブンの設定一覧\" button_text=\"オーブンの設定を追加\"　cols={oven_conf_cols} />\n    </div>\n  );\n}\n\nfunction SchedulePage(){\n  return (\n    <div>\n      <SchedulesManager />\n    </div>\n  );\n}\n\nfunction SimulationPage(){\n  return (\n    <SimulationManager />\n  );\n}\n\nlet Home = () => {\n  return (\n    <h1>生産プロセスシミュレータ IZAWA v0.0.1</h1>\n  );\n}\n\nfunction App(props){\n  let content = (\n    <BrowserRouter basename={window.location.pathname}>\n    <div>\n      <br/><br/><br/>\n      <Route path=\"/\" exact component={ProcessPage} />\n      <Route path=\"/process.html\" component={ProcessPage} />\n      <Route path=\"/process_config.html\" component={ProcessConfigPage} />\n      <Route path=\"/schedule.html\" component={SchedulePage} />\n      <Route path=\"/simulation.html\" component={SimulationPage} />\n    </div>\n    </BrowserRouter>\n  );\n  return(\n    <AppFrame content={content}/>\n  );\n}\n\nReactDOM.render(\n//render(\n<ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}